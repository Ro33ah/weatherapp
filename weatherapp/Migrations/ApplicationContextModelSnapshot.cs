// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using weatherapp.Models;

namespace weatherapp.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("weatherapp.Models.City", b =>
                {
                    b.Property<int>("cityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name");

                    b.HasKey("cityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("weatherapp.Models.Main", b =>
                {
                    b.Property<int>("mainId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("humidity");

                    b.Property<float>("temp");

                    b.HasKey("mainId");

                    b.ToTable("Mains");
                });

            modelBuilder.Entity("weatherapp.Models.Reading", b =>
                {
                    b.Property<int>("readingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("dt");

                    b.Property<int?>("mainId");

                    b.Property<int?>("weatherModelId");

                    b.HasKey("readingId");

                    b.HasIndex("mainId");

                    b.HasIndex("weatherModelId");

                    b.ToTable("Readings");
                });

            modelBuilder.Entity("weatherapp.Models.WeatherModel", b =>
                {
                    b.Property<int>("weatherModelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("cityId");

                    b.HasKey("weatherModelId");

                    b.HasIndex("cityId");

                    b.ToTable("WeatherModels");
                });

            modelBuilder.Entity("weatherapp.Models.Reading", b =>
                {
                    b.HasOne("weatherapp.Models.Main", "main")
                        .WithMany()
                        .HasForeignKey("mainId");

                    b.HasOne("weatherapp.Models.WeatherModel")
                        .WithMany("List")
                        .HasForeignKey("weatherModelId");
                });

            modelBuilder.Entity("weatherapp.Models.WeatherModel", b =>
                {
                    b.HasOne("weatherapp.Models.City", "city")
                        .WithMany()
                        .HasForeignKey("cityId");
                });
#pragma warning restore 612, 618
        }
    }
}
