// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using weatherapp.Models;

namespace weatherapp.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190425115554_weatherapp.Models.ApplicationContext")]
    partial class weatherappModelsApplicationContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("weatherapp.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("weatherapp.Models.Main", b =>
                {
                    b.Property<int>("MainId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Humidity");

                    b.Property<float>("Temp");

                    b.HasKey("MainId");

                    b.ToTable("Mains");
                });

            modelBuilder.Entity("weatherapp.Models.Reading", b =>
                {
                    b.Property<int>("ReadingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Dt");

                    b.Property<int?>("MainId");

                    b.Property<int?>("WeatherModelId");

                    b.HasKey("ReadingId");

                    b.HasIndex("MainId");

                    b.HasIndex("WeatherModelId");

                    b.ToTable("Readings");
                });

            modelBuilder.Entity("weatherapp.Models.WeatherModel", b =>
                {
                    b.Property<int>("WeatherModelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityId");

                    b.HasKey("WeatherModelId");

                    b.HasIndex("CityId");

                    b.ToTable("WeatherModels");
                });

            modelBuilder.Entity("weatherapp.Models.Reading", b =>
                {
                    b.HasOne("weatherapp.Models.Main", "Main")
                        .WithMany()
                        .HasForeignKey("MainId");

                    b.HasOne("weatherapp.Models.WeatherModel")
                        .WithMany("Readings")
                        .HasForeignKey("WeatherModelId");
                });

            modelBuilder.Entity("weatherapp.Models.WeatherModel", b =>
                {
                    b.HasOne("weatherapp.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");
                });
#pragma warning restore 612, 618
        }
    }
}
